/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id "com.diffplug.spotless" version "6.+"
}

apply from: '../gradle/clean-code.gradle'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Logging
    implementation libs.logback
    implementation libs.slf4j

    // This dependency is used by the application.
    implementation libs.guava

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Mocks
    testImplementation libs.instancio
    testImplementation libs.mockito
    testImplementation libs.mockito.junit.jupiter

    // Lombok
    compileOnly libs.lombok
    annotationProcessor libs.lombok
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.rangerforce.concurrency.App'
}

test {
    testLogging {
        // Show that tests are run in the command-line output.
        events 'passed', 'skipped', 'failed'
        exceptionFormat = 'full'
        showExceptions = true
        showCauses = true
        showStackTraces = true
        showStandardStreams = false
        debug {
            enabled = true
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "--enable-preview"
    options.compilerArgs += "-Xlint:preview"
}

tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += "--enable-preview"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

check.dependsOn spotlessCheck
